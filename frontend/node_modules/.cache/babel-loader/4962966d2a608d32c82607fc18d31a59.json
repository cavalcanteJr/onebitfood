{"ast":null,"code":"import _objectSpread from \"/home/lourival/frontend/onebitfood/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_ORDER_ITEM, REMOVE_ORDER_ITEM } from \"../actions/action_types\";\nexport default ((state = {\n  order: []\n}, action) => {\n  switch (action.type) {\n    case ADD_ORDER_ITEM:\n      let order = [];\n\n      if (state.restaurant && state.restaurant.id === action.restaurant.id) {\n        order = state.order;\n      }\n\n      order.push({\n        product: action.product,\n        quantity: action.quantity,\n        comment: action.comment\n      });\n      return _objectSpread({}, state, {\n        restaurant: action.restaurant,\n        order: order\n      });\n\n    case REMOVE_ORDER_ITEM:\n      const indexToRemove = state.order.indexOf(action.orderItem);\n      const newOrder = [...state.order];\n      newOrder.splice(indexToRemove, 1);\n      return _objectSpread({}, state, {\n        order: newOrder\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/lourival/frontend/onebitfood/src/reducers/newOrderReducer.js"],"names":["ADD_ORDER_ITEM","REMOVE_ORDER_ITEM","state","order","action","type","restaurant","id","push","product","quantity","comment","indexToRemove","indexOf","orderItem","newOrder","splice"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,yBAAlD;AAEA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAT,EAAwBC,MAAxB,KAAmC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKL,cAAL;AACE,UAAIG,KAAK,GAAG,EAAZ;;AAEA,UAAGD,KAAK,CAACI,UAAN,IAAoBJ,KAAK,CAACI,UAAN,CAAiBC,EAAjB,KAAwBH,MAAM,CAACE,UAAP,CAAkBC,EAAjE,EAAqE;AACnEJ,QAAAA,KAAK,GAAGD,KAAK,CAACC,KAAd;AACD;;AAEDA,MAAAA,KAAK,CAACK,IAAN,CAAW;AACTC,QAAAA,OAAO,EAAEL,MAAM,CAACK,OADP;AAETC,QAAAA,QAAQ,EAAEN,MAAM,CAACM,QAFR;AAGTC,QAAAA,OAAO,EAAEP,MAAM,CAACO;AAHP,OAAX;AAMA,+BACKT,KADL;AAEEI,QAAAA,UAAU,EAAEF,MAAM,CAACE,UAFrB;AAGEH,QAAAA,KAAK,EAAEA;AAHT;;AAMF,SAAKF,iBAAL;AACE,YAAMW,aAAa,GAAGV,KAAK,CAACC,KAAN,CAAYU,OAAZ,CAAoBT,MAAM,CAACU,SAA3B,CAAtB;AACA,YAAMC,QAAQ,GAAG,CAAC,GAAGb,KAAK,CAACC,KAAV,CAAjB;AACAY,MAAAA,QAAQ,CAACC,MAAT,CAAgBJ,aAAhB,EAA+B,CAA/B;AAEA,+BACKV,KADL;AAEEC,QAAAA,KAAK,EAAEY;AAFT;;AAIF;AACE,aAAOb,KAAP;AA9BJ;AAgCD,CAjCD","sourcesContent":["import { ADD_ORDER_ITEM, REMOVE_ORDER_ITEM } from \"../actions/action_types\";\n \nexport default (state = { order: [] }, action) => {\n  switch(action.type) {\n    case ADD_ORDER_ITEM:\n      let order = []\n \n      if(state.restaurant && state.restaurant.id === action.restaurant.id) {\n        order = state.order;\n      }\n \n      order.push({\n        product: action.product,\n        quantity: action.quantity,\n        comment: action.comment\n      })\n \n      return {\n        ...state,\n        restaurant: action.restaurant,\n        order: order\n    }\n \n    case REMOVE_ORDER_ITEM:\n      const indexToRemove = state.order.indexOf(action.orderItem)\n      const newOrder = [...state.order];\n      newOrder.splice(indexToRemove, 1);\n      \n      return {\n        ...state,\n        order: newOrder\n    }\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}