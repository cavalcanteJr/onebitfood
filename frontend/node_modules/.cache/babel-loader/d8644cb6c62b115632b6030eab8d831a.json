{"ast":null,"code":"var _jsxFileName = \"/home/lourival/frontend/onebitfood/src/components/list_restaurants/index.js\";\nimport React, { Component } from 'react';\nimport { Column } from \"rbx\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Restaurant from \"./restaurant.js\";\nimport { loadRestaurants } from \"../../actions/restaurant\";\n\nclass ListRestaurants extends Component {\n  componentWillMount() {\n    this.props.loadRestaurants(this.props.address);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.address !== prevProps.address) {\n      this.props.loadRestaurants(this.props.address);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"restaurants-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title is-size-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Restaurantes\"), React.createElement(Column.Group, {\n      multiline: true,\n      gapSize: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.restaurants.map(restaurant => {\n      return React.createElement(Restaurant, Object.assign({}, restaurant, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  restaurants: store.restaurantsState.restaurants,\n  address: store.addressState.address\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  loadRestaurants\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListRestaurants);","map":{"version":3,"sources":["/home/lourival/frontend/onebitfood/src/components/list_restaurants/index.js"],"names":["React","Component","Column","connect","bindActionCreators","Restaurant","loadRestaurants","ListRestaurants","componentWillMount","props","address","componentDidUpdate","prevProps","render","restaurants","map","restaurant","mapStateToProps","store","restaurantsState","addressState","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,KAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,eAAX,CAA2B,KAAKG,KAAL,CAAWC,OAAtC;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKH,KAAL,CAAWC,OAAX,KAAuBE,SAAS,CAACF,OAArC,EAA8C;AAC5C,WAAKD,KAAL,CAAWH,eAAX,CAA2B,KAAKG,KAAL,CAAWC,OAAtC;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,SAAS,MAAvB;AAAwB,MAAA,OAAO,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKJ,KAAL,CAAWK,WAAX,CAAuBC,GAAvB,CAA2BC,UAAU,IAAI;AACvC,aAAO,oBAAC,UAAD,oBAAgBA,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAFD,CAFJ,CAHF,CADF;AAaD;;AAzBqC;;AA4BxC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,WAAW,EAAEI,KAAK,CAACC,gBAAN,CAAuBL,WADJ;AAEhCJ,EAAAA,OAAO,EAAEQ,KAAK,CAACE,YAAN,CAAmBV;AAFI,CAAL,CAA7B;;AAKA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAIlB,kBAAkB,CAAC;AAAEE,EAAAA;AAAF,CAAD,EAAsBgB,QAAtB,CAAzD;;AAEA,eAAenB,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cd,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Column } from \"rbx\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n \nimport Restaurant from \"./restaurant.js\";\nimport { loadRestaurants } from \"../../actions/restaurant\";\n \nclass ListRestaurants extends Component {\n  componentWillMount() {\n    this.props.loadRestaurants(this.props.address);\n  }\n \n  componentDidUpdate(prevProps) {\n    if (this.props.address !== prevProps.address) {\n      this.props.loadRestaurants(this.props.address);\n    }\n  }\n \n  render() {\n    return (\n      <div className=\"restaurants-list\">\n        <h2 className=\"title is-size-4\">Restaurantes</h2>\n \n        <Column.Group multiline gapSize={2}>\n          {\n            this.props.restaurants.map(restaurant => {\n              return <Restaurant {...restaurant} />\n            })\n          }\n        </Column.Group>\n      </div>\n    )\n  }\n}\n \nconst mapStateToProps = store => ({\n  restaurants: store.restaurantsState.restaurants,\n  address: store.addressState.address\n});\n \nconst mapDispatchToProps = dispatch => bindActionCreators({ loadRestaurants }, dispatch);\n \nexport default connect(mapStateToProps, mapDispatchToProps)(ListRestaurants);"]},"metadata":{},"sourceType":"module"}