{"ast":null,"code":"import axios from \"axios\";\nconst url = axios.create({\n  baseURL: \"http://localhost:3001\"\n});\nexport default {\n  loadRestaurants: (address, category) => {\n    let city_params = address && address.city !== undefined ? \"city=\".concat(address.city) : '';\n    let category_params = category != null ? \"&category=\".concat(category.title) : '';\n    return url.get(\"/restaurants?\".concat(city_params).concat(category_params));\n  },\n  searchRestaurants: search => url.get(\"/restaurants/search?q=\".concat(search)),\n  getRestaurant: id => url.get(\"restaurants/\".concat(id)),\n  loadCategories: () => url.get(\"/categories\"),\n  createOrder: (order, products_order, address) => {\n    let new_product_orders = products_order.map(function (product_order) {\n      return {\n        'product_id': product_order.product.id,\n        'comment': product_order.comment,\n        'quantity': product_order.quantity\n      };\n    });\n    let full_address = [address.street, address.number, address.city, address.state, address.cep, address.reference ? \"Refer\\xEAncia: \".concat(address.reference) : null, address.complement ? \"Complemento: \".concat(address.complement) : null].join(',');\n    order['order_products_attributes'] = new_product_orders;\n    order['address'] = full_address;\n    return url.post(\"orders\", order);\n  },\n  loadOrder: id => url.get(\"orders/\".concat(id))\n};","map":{"version":3,"sources":["/home/lourival/frontend/onebitfood/src/services/api.js"],"names":["axios","url","create","baseURL","loadRestaurants","address","category","city_params","city","undefined","category_params","title","get","searchRestaurants","search","getRestaurant","id","loadCategories","createOrder","order","products_order","new_product_orders","map","product_order","product","comment","quantity","full_address","street","number","state","cep","reference","complement","join","post","loadOrder"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEA,eAAe;AACbC,EAAAA,eAAe,EAAE,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACtC,QAAIC,WAAW,GAAIF,OAAO,IAAIA,OAAO,CAACG,IAAR,KAAiBC,SAA7B,kBAAkDJ,OAAO,CAACG,IAA1D,IAAmE,EAArF;AACA,QAAIE,eAAe,GAAIJ,QAAQ,IAAI,IAAb,uBAAkCA,QAAQ,CAACK,KAA3C,IAAqD,EAA3E;AAEA,WAAOV,GAAG,CAACW,GAAJ,wBAAwBL,WAAxB,SAAsCG,eAAtC,EAAP;AACD,GANY;AAQbG,EAAAA,iBAAiB,EAAGC,MAAD,IAAYb,GAAG,CAACW,GAAJ,iCAAiCE,MAAjC,EARlB;AASbC,EAAAA,aAAa,EAAGC,EAAD,IAAQf,GAAG,CAACW,GAAJ,uBAAuBI,EAAvB,EATV;AAUbC,EAAAA,cAAc,EAAE,MAAMhB,GAAG,CAACW,GAAJ,CAAQ,aAAR,CAVT;AAYbM,EAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,cAAR,EAAwBf,OAAxB,KAAoC;AAC/C,QAAIgB,kBAAkB,GAAGD,cAAc,CAACE,GAAf,CAAmB,UAAUC,aAAV,EAAyB;AACnE,aAAQ;AACN,sBAAcA,aAAa,CAACC,OAAd,CAAsBR,EAD9B;AAEN,mBAAWO,aAAa,CAACE,OAFnB;AAGN,oBAAYF,aAAa,CAACG;AAHpB,OAAR;AAKD,KANwB,CAAzB;AAQA,QAAIC,YAAY,GAAG,CACjBtB,OAAO,CAACuB,MADS,EACDvB,OAAO,CAACwB,MADP,EACexB,OAAO,CAACG,IADvB,EAEjBH,OAAO,CAACyB,KAFS,EAEFzB,OAAO,CAAC0B,GAFN,EAGhB1B,OAAO,CAAC2B,SAAT,4BAAoC3B,OAAO,CAAC2B,SAA5C,IAA2D,IAH1C,EAIhB3B,OAAO,CAAC4B,UAAT,0BAAsC5B,OAAO,CAAC4B,UAA9C,IAA6D,IAJ5C,EAKjBC,IALiB,CAKZ,GALY,CAAnB;AAOAf,IAAAA,KAAK,CAAC,2BAAD,CAAL,GAAqCE,kBAArC;AACAF,IAAAA,KAAK,CAAC,SAAD,CAAL,GAAmBQ,YAAnB;AAEA,WAAO1B,GAAG,CAACkC,IAAJ,WAAmBhB,KAAnB,CAAP;AACD,GAhCY;AAiCbiB,EAAAA,SAAS,EAAGpB,EAAD,IAAQf,GAAG,CAACW,GAAJ,kBAAkBI,EAAlB;AAjCN,CAAf","sourcesContent":["import axios from \"axios\";\n \nconst url = axios.create({ baseURL: \"http://localhost:3001\" })\n \nexport default {\n  loadRestaurants: (address, category) => {\n    let city_params = (address && address.city !== undefined) ? `city=${address.city}` : ''\n    let category_params = (category != null) ? `&category=${category.title}` : ''\n \n    return url.get(`/restaurants?${city_params}${category_params}`)\n  },\n \n  searchRestaurants: (search) => url.get(`/restaurants/search?q=${search}`),\n  getRestaurant: (id) => url.get(`restaurants/${id}`),\n  loadCategories: () => url.get(\"/categories\"),\n \n  createOrder: (order, products_order, address) => {\n    let new_product_orders = products_order.map(function (product_order) {\n      return ({\n        'product_id': product_order.product.id,\n        'comment': product_order.comment,\n        'quantity': product_order.quantity \n      })\n    });\n    \n    let full_address = [  \n      address.street, address.number, address.city,\n      address.state, address.cep,\n      (address.reference)? `ReferÃªncia: ${address.reference}` :  null,\n      (address.complement)? `Complemento: ${address.complement}` : null\n    ].join(',')\n    \n    order['order_products_attributes'] = new_product_orders\n    order['address'] = full_address\n \n    return url.post(`orders`, order)\n  },\n  loadOrder: (id) => url.get(`orders/${id}`),\n}"]},"metadata":{},"sourceType":"module"}